AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    API to collect lab data.
Parameters:
  SourceRespositoryName:
    Type: String
    Description: Git test source code respository name.
  GitCommand: 
    Type: String
    Description: Git commands to clone the test code respository.
  RunUnitTest:
    Type: String
    Default: true
    AllowedValues: 
      - true
      - false
    Description: Run pytest unittest or not.
  BlackListProcess: 
    Type: CommaDelimitedList
    Default: ""
    Description: Black List Process.
    
Globals:
  Function:
    Runtime: python3.6 # language used at runtime
    Timeout: 180 # timeout for a given lambda function execution
    MemorySize: 512
    Environment:
        Variables: 
          StudentLabDataBucket: !Ref StudentLabDataBucket
          StudentMarkingBucket: !Ref StudentMarkingBucket
          SourceRespositoryName: !Ref SourceRespositoryName
          GitCommand: !Ref GitCommand
          RunUnitTest: !Ref RunUnitTest
          BlackListProcess: "iexplore.exe,MicrosoftEdgeCP.exe"
          
Resources:
    ApiGatewayApi:
      Type: AWS::Serverless::Api
      Properties:
        StageName: Prod
        DefinitionBody:
          openapi: 3.0.0
          info:
            title:
              Ref: 'AWS::StackName'
            version: '1.0'
          x-amazon-apigateway-api-key-source: HEADER
          paths:
            /code:
              post:
                security:
                  - api_key: []
                x-amazon-apigateway-integration:
                  httpMethod: POST
                  type: aws_proxy
                  passthroughBehavior: when_no_match
                  uri:
                    Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LabCodeCollectorFunction.Arn}/invocations
                responses: {}
            /event:
              post:
                security:
                  - api_key: []
                x-amazon-apigateway-integration:
                  httpMethod: POST
                  type: aws_proxy
                  uri:
                    Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LabEventCollectorFunction.Arn}/invocations
                responses: {}
            /process:
              post:
                security:
                  - api_key: []
                x-amazon-apigateway-integration:
                  httpMethod: POST
                  type: aws_proxy
                  uri:
                    Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LabProcessCollectorFunction.Arn}/invocations
                responses: {}
            '/progress/{studentId}/{lab}':
              get:
                parameters:
                  - in: path
                    name: studentId
                    schema:
                      type: string
                    required: true
                    description: Student ID
                  - in: path
                    name: lab
                    schema:
                      type: string
                    required: true
                    description: lab number
                x-amazon-apigateway-integration:
                  httpMethod: POST
                  type: aws_proxy
                  uri:
                    Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CheckProgessFunction.Arn}/invocations
                responses: {}
          components:
            securitySchemes:
              api_key:
                type: apiKey
                name: x-api-key
                in: header
                

    LabEventCollectorFunction:
        Type: AWS::Serverless::Function 
        Properties:
            CodeUri: venv/lib/python3.6/dist-packages
            Handler: collect_event_function.lambda_handler
            Policies:
              - Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Action:
                      - apigateway:GET
                    Resource: 
                      Fn::Sub: 'arn:aws:apigateway:${AWS::Region}::/apikeys/*'
                  - Effect: Allow
                    Action:
                      - s3:PutObject
                    Resource:
                        - Fn::Sub: 'arn:aws:s3:::${StudentLabDataBucket}/*'
                        - Fn::Sub: 'arn:aws:s3:::${StudentMarkingBucket}/*'   
            Events:
                LambdaMicroservice:
                  Type: Api
                  Properties:
                    RestApiId: !Ref ApiGatewayApi
                    Path: /event
                    Method: POST 

    LabCodeCollectorFunction:
        Type: AWS::Serverless::Function 
        Properties:
            CodeUri: venv/lib/python3.6/dist-packages
            Handler: collect_code_function.lambda_handler
            MemorySize: 2048
            Policies:
              - AWSCodeCommitReadOnly
              - Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Action:
                      - apigateway:GET
                    Resource: 
                      Fn::Sub: 'arn:aws:apigateway:${AWS::Region}::/apikeys/*'
                  - Effect: Allow
                    Action:
                      - s3:PutObject
                    Resource:
                        - Fn::Sub: 'arn:aws:s3:::${StudentLabDataBucket}/*'
                        - Fn::Sub: 'arn:aws:s3:::${StudentMarkingBucket}/*'     
                  - Effect: Allow
                    Action:
                      - s3:PutObjectAcl
                    Resource:
                        - Fn::Sub: 'arn:aws:s3:::${StudentMarkingBucket}/*'  
            Events:
                LambdaMicroservice:
                  Type: Api
                  Properties:
                    RestApiId: !Ref ApiGatewayApi
                    Path: /code
                    Method: POST 


    LabProcessCollectorFunction:
        Type: AWS::Serverless::Function 
        Properties:
            CodeUri: venv/lib/python3.6/dist-packages
            Handler: collect_process_function.lambda_handler
            Policies:
              - Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Action:
                      - apigateway:GET
                    Resource: 
                      Fn::Sub: 'arn:aws:apigateway:${AWS::Region}::/apikeys/*'
                  - Effect: Allow
                    Action:
                      - s3:PutObject
                    Resource:
                        - Fn::Sub: 'arn:aws:s3:::${StudentLabDataBucket}/*'
                        - Fn::Sub: 'arn:aws:s3:::${StudentMarkingBucket}/*'     
                  - Effect: Allow
                    Action:
                      - s3:PutObjectAcl
                    Resource:
                        - Fn::Sub: 'arn:aws:s3:::${StudentMarkingBucket}/*'  
            Events:
                LambdaMicroservice:
                  Type: Api
                  Properties:
                    RestApiId: !Ref ApiGatewayApi
                    Path: /process
                    Method: POST 


    CheckProgessFunction:
        Type: AWS::Serverless::Function 
        Properties:
            CodeUri: venv/lib/python3.6/dist-packages
            Handler: check_progress.lambda_handler
            Policies:
              - Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Action:
                      - apigateway:GET
                    Resource: 
                      Fn::Sub: 'arn:aws:apigateway:${AWS::Region}::/apikeys/*'
                  - Effect: Allow
                    Action:
                      - s3:GetObject
                    Resource:
                        - Fn::Sub: 'arn:aws:s3:::${StudentMarkingBucket}/*'     
                  - Effect: Allow
                    Action:
                      - s3:ListObjects
                    Resource:
                        - Fn::Sub: 'arn:aws:s3:::${StudentMarkingBucket}/*'  
            Events:
                LambdaMicroservice:
                  Type: Api
                  Properties:
                    RestApiId: !Ref ApiGatewayApi
                    Path: /progress/{studentId}/{lab}
                    Method: GET
                    
    StudentLabDataBucket:
        Type: AWS::S3::Bucket

    StudentMarkingBucket:
        Type: AWS::S3::Bucket
        Properties:
          AccessControl: PublicRead
          WebsiteConfiguration:
            IndexDocument: index.html
            ErrorDocument: error.html
            
    LabCodeCollectorFunctionPermission:
        Type: 'AWS::Lambda::Permission'
        Properties:
          Action: 'lambda:InvokeFunction'
          FunctionName:
            'Fn::GetAtt':
              - LabCodeCollectorFunction
              - Arn
          Principal: apigateway.amazonaws.com
          SourceArn:
            'Fn::Sub': 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/*/*'

    LabEventCollectorPermission:
        Type: 'AWS::Lambda::Permission'
        Properties:
          Action: 'lambda:InvokeFunction'
          FunctionName:
            'Fn::GetAtt':
              - LabEventCollectorFunction
              - Arn
          Principal: apigateway.amazonaws.com
          SourceArn:
            'Fn::Sub': 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/*/*'


    LabProcessCollectorPermission:
        Type: 'AWS::Lambda::Permission'
        Properties:
          Action: 'lambda:InvokeFunction'
          FunctionName:
            'Fn::GetAtt':
              - LabProcessCollectorFunction
              - Arn
          Principal: apigateway.amazonaws.com
          SourceArn:
            'Fn::Sub': 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/*/*'

    CheckProgessFunctionPermission:
        Type: 'AWS::Lambda::Permission'
        Properties:
          Action: 'lambda:InvokeFunction'
          FunctionName:
            'Fn::GetAtt':
              - LabProcessCollectorFunction
              - Arn
          Principal: apigateway.amazonaws.com
          SourceArn:
            'Fn::Sub': 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/*/*'
            
    StudentPlan:
      Type: AWS::ApiGateway::UsagePlan
      DependsOn:
        - ApiGatewayApiProdStage
      Properties:
        ApiStages:
          -
            ApiId: !Ref 'ApiGatewayApi'
            Stage: Prod
        Description: Student Plan 50000 requests per day
        Quota:
          Limit: 50000
          Period: DAY
        Throttle:
          BurstLimit: 20
          RateLimit: 10
        UsagePlanName: !Ref AWS::StackName        

    ApiKey: 
      Type: AWS::ApiGateway::ApiKey
      DependsOn:
        - ApiGatewayApiProdStage
      Properties: 
        Name: "000000000"
        Description: "000000000"
        Enabled: "true"
        StageKeys: 
          - RestApiId: 
              Ref: "ApiGatewayApi"
            StageName: Prod
   
    UsagePlanKey:
      Type: AWS::ApiGateway::UsagePlanKey
      Properties : 
        KeyId: !Ref ApiKey
        KeyType: API_KEY
        UsagePlanId: !Ref StudentPlan 

    DatabaseEvents:
      Type: AWS::Glue::Database
      Properties:
        CatalogId: !Ref AWS::AccountId
        DatabaseInput:
          Name: studentevents
          Description: Student Event Stream

    TableEvents:
      # Creating the table waits for the database to be created
      DependsOn: DatabaseEvents
      Type: AWS::Glue::Table
      Properties:
        CatalogId: !Ref AWS::AccountId
        DatabaseName: !Ref DatabaseEvents
        TableInput:
          Name: event_stream
          Description: Event from students.
          TableType: EXTERNAL_TABLE
          Parameters: {
            "classification": "json"
          }
          PartitionKeys:
            - Name: year
              Type: int
            - Name: month
              Type: int
            - Name: day
              Type: int
            - Name: hour
              Type: int
            - Name: id
              Type: string
          StorageDescriptor:
            OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            Columns:
              - Name: x
                Type: int
              - Name: y
                Type: int
              - Name: dx
                Type: int
              - Name: dy
                Type: int
              - Name: time
                Type: timestamp
              - Name: button
                Type: string
              - Name: pressed
                Type: string
              - Name: key
                Type: string
              - Name: name
                Type: string
              - Name: ip
                Type: string
              - Name: student
                Type: string            
            InputFormat: org.apache.hadoop.mapred.TextInputFormat
            Location: 
              Fn::Sub: 's3://${StudentLabDataBucket}/event_stream'
            SerdeInfo:
              Parameters:
                paths: 'button,dx,dy,ip,key,name,pressed,student,time,x,y'
              SerializationLibrary: org.openx.data.jsonserde.JsonSerDe

    AthenaNamedQueryStudentKeyboardStream:
      DependsOn: TableEvents
      Type: AWS::Athena::NamedQuery
      Properties:
        Database: !Ref DatabaseEvents
        Description: "Student keyboard streams."
        Name: "StudentKeyboardStream"
        QueryString: >
                      SELECT distinct(id), array_agg(key) 
                      FROM "studentevents"."event_stream" 
                      WHERE name='KeyPressEvent' 
                      GROUP BY id;
                      
Outputs:
    LabCollectorApi:
      Description: "API Gateway endpoint URL for Prod stage"
      Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
      
    LabEventCollectorApi:
      Description: "API Gateway endpoint URL for Prod stage for LabEventCollectorFunction function"
      Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/event/"

    LabCodeCollectorApi:
      Description: "API Gateway endpoint URL for Prod stage for LabEventCollectorFunction function"
      Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/code/"
      
    StudentPlan:
       Value: !Ref StudentPlan 
       
    StudentLabDataBucket:
      Value: !Ref StudentLabDataBucket 
      
    StudentMarkingBucket:
      Value: !Ref StudentMarkingBucket
      
    ApiKey:
      Value: !Ref ApiKey

    WebsiteURL:
      Value: !GetAtt [StudentMarkingBucket, WebsiteURL]
      Description: URL for website hosted on S3
    
    S3BucketSecureURL:
      Value: !Join ['', ['https://', !GetAtt [StudentMarkingBucket, DomainName]]]
      Description: Name of S3 bucket to hold website content